# Используем официальный образ PyTorch с поддержкой CUDA.
FROM pytorch/pytorch:2.2.0-cuda11.8-cudnn8-runtime

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем requirements.txt
COPY requirements.txt .  # <--- ИЗМЕНЕНО: теперь просто requirements.txt

# Устанавливаем зависимости Python.
RUN pip install --no-cache-dir -r requirements.txt \
    --extra-index-url https://download.pytorch.org/whl/cu118 \
    && apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git

# Копируем остальное содержимое приложения (включая main.py, detector.py, templates/)
COPY . .

# Копируем директорию shared_data, чтобы YOLO могла найти модель (из корня контекста сборки docker-compose)
COPY ../shared_data/ /shared_data/ # <--- ИЗМЕНЕНО: путь теперь относительный к корневой папке проекта, т.к. контекст - app
# Копируем папку videos (из корня контекста сборки docker-compose)
COPY ../videos/ /app/videos/       # <--- ИЗМЕНЕНО: путь теперь относительный к корневой папке проекта

# Обязательно для YOLO, чтобы найти модель
ENV YOLO_MODELS_DIR=/shared_data/models

# Порт, который будет слушать Flask
EXPOSE 5000

# Запускаем приложение
CMD ["python", "main.py"]